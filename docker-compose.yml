version: '3'

services:
  app:
    build:
      context: .
    ports:
      - "8080:8080"
    container_name: "carrace-app-v1"
    depends_on:
      - mysql
    command: ["./wait-for-it.sh", "carrace-mysql-v1:3306", "--", "java", "-jar", "demo-1.0-SNAPSHOT.jar"]
    networks:
      - app-network
    environment:
      - DATABASE_HOST=carrace-mysql-v1
      - DATABASE_PORT=3306

  mysql:
    image: mysql:8.0
    container_name: "carrace-mysql-v1"
    restart: always
    # command: --lower_case_table_names=1
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "CarRace"
      MYSQL_USER: "CarRaceUser"
      MYSQL_PASSWORD: "CarRacePassword"
    ports:
      - "3306:3306"
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: "carrace-zookeeper-v1"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: wurstmeister/kafka
    container_name: "carrace-kafka-v1"
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  manager:
    image: sheepkiller/kafka-manager
    container_name: "carrace-kafka-manager-v1"
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
    depends_on:
      - zookeeper


networks:
  app-network:
    driver: bridge